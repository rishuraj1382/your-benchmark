{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rishu\\\\your-benchmark\\\\frontend\\\\src\\\\components\\\\VisualMemoryTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, Button, Typography, Container } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { styled } from '@mui/system';\nimport correctSound from '../assets/sounds/correct.mp3';\nimport incorrectSound from '../assets/sounds/incorrect.mp3';\nimport statsimg from \"../assets/voilet.png\";\nimport { infoSectionStyles, infoBoxStyles, gameButtonStyles } from './Theme';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfoSection = styled('div')(infoSectionStyles);\nconst InfoBox = styled('div')(infoBoxStyles);\nconst GameButton = styled(Button)(gameButtonStyles);\n_c = GameButton;\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#7f60d4'\n    },\n    secondary: {\n      main: '#5e45a0'\n    },\n    background: {\n      default: '#f5f3ff',\n      paper: '#ffffff'\n    }\n  }\n});\nfunction VisualMemoryTest() {\n  _s();\n  const [level, setLevel] = useState(1);\n  const [gridSize, setGridSize] = useState(3);\n  const [grid, setGrid] = useState(Array(9).fill(false));\n  const [highlighted, setHighlighted] = useState([]);\n  const [stage, setStage] = useState('start');\n  const [userSelection, setUserSelection] = useState([]);\n  const [message, setMessage] = useState('');\n  const [userId, setUserId] = useState('');\n  const [testResults, setTestResults] = useState([]);\n  useEffect(() => {\n    if (level >= 1 && level <= 3) {\n      setGridSize(3);\n    } else if (level >= 4 && level <= 8) {\n      setGridSize(4);\n    } else if (level >= 9 && level <= 15) {\n      setGridSize(5);\n    } else {\n      setGridSize(6);\n    }\n  }, [level]);\n  useEffect(() => {\n    setGrid(Array(gridSize * gridSize).fill(false));\n    setHighlighted([]);\n    setUserSelection([]);\n  }, [gridSize]);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const storedUser = localStorage.getItem('user');\n        if (!storedUser) {\n          return;\n        }\n        const parsedUser = JSON.parse(storedUser);\n        const userId = parsedUser._id;\n        if (!userId) {\n          return;\n        }\n        setUserId(userId);\n        const response = await axios.get(`https://yourbenchmark.onrender.com/users/${userId}`);\n        setTestResults(response.data.testResults);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n    fetchUserData();\n  }, []);\n  const saveTestResults = async () => {\n    try {\n      const score = level - 1;\n      const currentTestResults = testResults || {};\n      const visualMemoryData = currentTestResults.visualMemory || {\n        noOfTests: 0,\n        total: 0,\n        min: Infinity,\n        max: 0,\n        avg: 0\n      };\n      const newNoOfTests = visualMemoryData.noOfTests + 1;\n      const newTotal = visualMemoryData.total + score;\n      const newMin = Math.min(visualMemoryData.min, score);\n      const newMax = Math.max(visualMemoryData.max, score);\n      const newAvg = newTotal / newNoOfTests;\n      currentTestResults.visualMemory = {\n        noOfTests: newNoOfTests,\n        total: newTotal,\n        min: newMin,\n        max: newMax,\n        avg: newAvg\n      };\n      await axios.patch(`http://localhost:5000/users/${userId}`, {\n        testResults: currentTestResults\n      });\n      console.log('Test results saved successfully');\n    } catch (error) {\n      console.error('Error saving test results:', error);\n    }\n  };\n  const startGame = () => {\n    setStage('memorizing');\n    generateHighlightedSquares();\n  };\n  const generateHighlightedSquares = () => {\n    const newHighlighted = [];\n    while (newHighlighted.length < level + 2) {\n      // Number of squares to memorize\n      const randomIndex = Math.floor(Math.random() * gridSize * gridSize);\n      if (!newHighlighted.includes(randomIndex)) {\n        newHighlighted.push(randomIndex);\n      }\n    }\n    setHighlighted(newHighlighted);\n    setGrid(prevGrid => prevGrid.map((_, index) => newHighlighted.includes(index)));\n    setTimeout(() => {\n      setGrid(Array(gridSize * gridSize).fill(false));\n      setStage('input');\n    }, 2000);\n  };\n  const handleSquareClick = index => {\n    if (stage !== 'input' || userSelection.includes(index)) return;\n    const newUserSelection = [...userSelection, index];\n    setUserSelection(newUserSelection);\n    const isCorrect = highlighted.includes(index);\n    const audio = new Audio(isCorrect ? correctSound : incorrectSound);\n    audio.play();\n    setGrid(prevGrid => prevGrid.map((val, i) => i === index ? isCorrect : val));\n    setTimeout(() => {\n      setGrid(prevGrid => prevGrid.map((val, i) => i === index ? false : val));\n    }, 300);\n    if (!isCorrect) {\n      saveTestResults();\n      setMessage(`Incorrect! You reached level ${level}.`);\n      setStage('failed');\n      return;\n    }\n    if (newUserSelection.length === highlighted.length) {\n      setMessage('Correct! Moving to next level.');\n      setTimeout(() => {\n        setLevel(prevLevel => prevLevel + 1);\n        setUserSelection([]);\n        setHighlighted([]);\n        setMessage('');\n        setStage('memorizing');\n      }, 1000);\n    }\n  };\n  useEffect(() => {\n    if (stage === 'memorizing' && !highlighted.length) {\n      generateHighlightedSquares();\n    }\n  }, [stage, highlighted, level]);\n  const resetGame = () => {\n    setLevel(1);\n    setUserSelection([]);\n    setHighlighted([]);\n    setMessage('');\n    setStage('start');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: 'background.default',\n        minHeight: '100vh',\n        py: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        sx: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: [\"Visual Memory Test - Level \", level]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            height: '80px',\n            mb: 2\n          },\n          children: [message && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"secondary\",\n            sx: {\n              mb: 2\n            },\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), stage === 'start' && /*#__PURE__*/_jsxDEV(GameButton, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: startGame,\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), stage === 'failed' && /*#__PURE__*/_jsxDEV(GameButton, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: resetGame,\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'grid',\n            gridTemplateColumns: `repeat(${gridSize}, 1fr)`,\n            gap: {\n              xs: '5px',\n              sm: '10px'\n            },\n            width: '80%',\n            aspectRatio: '1',\n            margin: '0 auto'\n          },\n          children: grid.map((isHighlighted, index) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              aspectRatio: '1',\n              backgroundColor: isHighlighted ? '#d4eaad' : theme.palette.primary.main,\n              cursor: stage === 'input' ? 'pointer' : 'default',\n              transition: 'background-color 0.3s ease, transform 0.2s ease',\n              borderRadius: '8px',\n              boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n              '&:hover': {\n                backgroundColor: stage === 'input' ? theme.palette.primary.light : null,\n                transform: stage === 'input' ? 'scale(1.05)' : null\n              }\n            },\n            onClick: () => handleSquareClick(index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_s(VisualMemoryTest, \"EteEFaQCUlf0rDabhi8mO+bLiB8=\");\n_c2 = VisualMemoryTest;\nexport default VisualMemoryTest;\nvar _c, _c2;\n$RefreshReg$(_c, \"GameButton\");\n$RefreshReg$(_c2, \"VisualMemoryTest\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Button","Typography","Container","createTheme","ThemeProvider","styled","correctSound","incorrectSound","statsimg","infoSectionStyles","infoBoxStyles","gameButtonStyles","axios","jsxDEV","_jsxDEV","InfoSection","InfoBox","GameButton","_c","theme","palette","primary","main","secondary","background","default","paper","VisualMemoryTest","_s","level","setLevel","gridSize","setGridSize","grid","setGrid","Array","fill","highlighted","setHighlighted","stage","setStage","userSelection","setUserSelection","message","setMessage","userId","setUserId","testResults","setTestResults","fetchUserData","storedUser","localStorage","getItem","parsedUser","JSON","parse","_id","response","get","data","error","console","saveTestResults","score","currentTestResults","visualMemoryData","visualMemory","noOfTests","total","min","Infinity","max","avg","newNoOfTests","newTotal","newMin","Math","newMax","newAvg","patch","log","startGame","generateHighlightedSquares","newHighlighted","length","randomIndex","floor","random","includes","push","prevGrid","map","_","index","setTimeout","handleSquareClick","newUserSelection","isCorrect","audio","Audio","play","val","i","prevLevel","resetGame","children","sx","bgcolor","minHeight","py","maxWidth","textAlign","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","height","mb","color","onClick","display","gridTemplateColumns","gap","xs","sm","width","aspectRatio","margin","isHighlighted","backgroundColor","cursor","transition","borderRadius","boxShadow","light","transform","_c2","$RefreshReg$"],"sources":["C:/Users/rishu/your-benchmark/frontend/src/components/VisualMemoryTest.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Box, Button, Typography, Container } from '@mui/material';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { styled } from '@mui/system';\r\nimport correctSound from '../assets/sounds/correct.mp3';\r\nimport incorrectSound from '../assets/sounds/incorrect.mp3';\r\nimport statsimg from \"../assets/voilet.png\";\r\nimport { infoSectionStyles, infoBoxStyles, gameButtonStyles } from './Theme';\r\nimport axios from 'axios';\r\n\r\nconst InfoSection = styled('div')(infoSectionStyles);\r\nconst InfoBox = styled('div')(infoBoxStyles);\r\nconst GameButton = styled(Button)(gameButtonStyles);\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#7f60d4',\r\n    },\r\n    secondary: {\r\n      main: '#5e45a0',\r\n    },\r\n    background: {\r\n      default: '#f5f3ff',\r\n      paper: '#ffffff',\r\n    },\r\n  },\r\n});\r\n\r\nfunction VisualMemoryTest() {\r\n  const [level, setLevel] = useState(1);\r\n  const [gridSize, setGridSize] = useState(3);\r\n  const [grid, setGrid] = useState(Array(9).fill(false));\r\n  const [highlighted, setHighlighted] = useState([]);\r\n  const [stage, setStage] = useState('start');\r\n  const [userSelection, setUserSelection] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [userId, setUserId] = useState('');\r\n  const [testResults, setTestResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (level >= 1 && level <= 3) { setGridSize(3); }\r\n    else if (level >= 4 && level <= 8) { setGridSize(4); }\r\n    else if (level >= 9 && level <= 15) { setGridSize(5); }\r\n    else { setGridSize(6); }\r\n  }, [level]);\r\n\r\n  useEffect(() => {\r\n    setGrid(Array(gridSize * gridSize).fill(false));\r\n    setHighlighted([]);\r\n    setUserSelection([]);\r\n  }, [gridSize]);\r\n  \r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const storedUser = localStorage.getItem('user');\r\n        if (!storedUser) { return; }\r\n        const parsedUser = JSON.parse(storedUser);\r\n        const userId = parsedUser._id;\r\n        if (!userId) { return; }\r\n        setUserId(userId);\r\n\r\n        const response = await axios.get(`https://yourbenchmark.onrender.com/users/${userId}`);\r\n        setTestResults(response.data.testResults);\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    };\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const saveTestResults = async () => {\r\n    try {\r\n      const score = level - 1;\r\n      const currentTestResults = testResults || {};\r\n      const visualMemoryData = currentTestResults.visualMemory || { noOfTests: 0, total: 0, min: Infinity, max: 0, avg: 0 };\r\n      \r\n      const newNoOfTests = visualMemoryData.noOfTests + 1;\r\n      const newTotal = visualMemoryData.total + score;\r\n      const newMin = Math.min(visualMemoryData.min, score);\r\n      const newMax = Math.max(visualMemoryData.max, score);\r\n      const newAvg = newTotal / newNoOfTests;\r\n\r\n      currentTestResults.visualMemory = {\r\n        noOfTests: newNoOfTests,\r\n        total: newTotal,\r\n        min: newMin,\r\n        max: newMax,\r\n        avg: newAvg,\r\n      };\r\n      \r\n      await axios.patch(`http://localhost:5000/users/${userId}`, {\r\n        testResults: currentTestResults,\r\n      });\r\n      console.log('Test results saved successfully');\r\n    } catch (error) {\r\n      console.error('Error saving test results:', error);\r\n    }\r\n  };\r\n  \r\n  const startGame = () => {\r\n    setStage('memorizing');\r\n    generateHighlightedSquares();\r\n  };\r\n\r\n  const generateHighlightedSquares = () => {\r\n    const newHighlighted = [];\r\n    while (newHighlighted.length < level + 2) { // Number of squares to memorize\r\n      const randomIndex = Math.floor(Math.random() * gridSize * gridSize);\r\n      if (!newHighlighted.includes(randomIndex)) {\r\n        newHighlighted.push(randomIndex);\r\n      }\r\n    }\r\n    setHighlighted(newHighlighted);\r\n    setGrid(prevGrid => prevGrid.map((_, index) => newHighlighted.includes(index)));\r\n    \r\n    setTimeout(() => {\r\n      setGrid(Array(gridSize * gridSize).fill(false));\r\n      setStage('input');\r\n    }, 2000);\r\n  };\r\n\r\n  const handleSquareClick = (index) => {\r\n    if (stage !== 'input' || userSelection.includes(index)) return;\r\n\r\n    const newUserSelection = [...userSelection, index];\r\n    setUserSelection(newUserSelection);\r\n\r\n    const isCorrect = highlighted.includes(index);\r\n    const audio = new Audio(isCorrect ? correctSound : incorrectSound);\r\n    audio.play();\r\n\r\n    setGrid(prevGrid => prevGrid.map((val, i) => (i === index ? isCorrect : val)));\r\n\r\n    setTimeout(() => {\r\n        setGrid(prevGrid => prevGrid.map((val, i) => (i === index ? false : val)));\r\n    }, 300);\r\n\r\n    if (!isCorrect) {\r\n      saveTestResults();\r\n      setMessage(`Incorrect! You reached level ${level}.`);\r\n      setStage('failed');\r\n      return;\r\n    }\r\n    \r\n    if (newUserSelection.length === highlighted.length) {\r\n      setMessage('Correct! Moving to next level.');\r\n      setTimeout(() => {\r\n        setLevel(prevLevel => prevLevel + 1);\r\n        setUserSelection([]);\r\n        setHighlighted([]);\r\n        setMessage('');\r\n        setStage('memorizing');\r\n      }, 1000);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (stage === 'memorizing' && !highlighted.length) {\r\n      generateHighlightedSquares();\r\n    }\r\n  }, [stage, highlighted, level]);\r\n\r\n  const resetGame = () => {\r\n    setLevel(1);\r\n    setUserSelection([]);\r\n    setHighlighted([]);\r\n    setMessage('');\r\n    setStage('start');\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Box sx={{ bgcolor: 'background.default', minHeight: '100vh', py: 4 }}>\r\n        <Container maxWidth=\"sm\" sx={{ textAlign: 'center' }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Visual Memory Test - Level {level}\r\n          </Typography>\r\n\r\n          <Box sx={{ height: '80px', mb: 2 }}>\r\n            {message && (\r\n              <Typography variant=\"h6\" color=\"secondary\" sx={{ mb: 2 }}>\r\n                {message}\r\n              </Typography>\r\n            )}\r\n            {stage === 'start' && (\r\n              <GameButton variant=\"contained\" color=\"primary\" onClick={startGame}>\r\n                Start Game\r\n              </GameButton>\r\n            )}\r\n            {stage === 'failed' && (\r\n              <GameButton variant=\"contained\" color=\"secondary\" onClick={resetGame}>\r\n                Play Again\r\n              </GameButton>\r\n            )}\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              display: 'grid',\r\n              gridTemplateColumns: `repeat(${gridSize}, 1fr)`,\r\n              gap: { xs: '5px', sm: '10px' },\r\n              width: '80%',\r\n              aspectRatio: '1',\r\n              margin: '0 auto',\r\n            }}\r\n          >\r\n            {grid.map((isHighlighted, index) => (\r\n              <Box\r\n                key={index}\r\n                sx={{\r\n                  aspectRatio: '1',\r\n                  backgroundColor: isHighlighted ? '#d4eaad' : theme.palette.primary.main,\r\n                  cursor: stage === 'input' ? 'pointer' : 'default',\r\n                  transition: 'background-color 0.3s ease, transform 0.2s ease',\r\n                  borderRadius: '8px',\r\n                  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n                  '&:hover': {\r\n                    backgroundColor: stage === 'input' ? theme.palette.primary.light : null,\r\n                    transform: stage === 'input' ? 'scale(1.05)' : null,\r\n                  },\r\n                }}\r\n                onClick={() => handleSquareClick(index)}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default VisualMemoryTest;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}