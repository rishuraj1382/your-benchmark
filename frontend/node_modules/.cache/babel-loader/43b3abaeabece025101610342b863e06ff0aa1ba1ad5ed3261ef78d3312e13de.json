{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rishu\\\\your-benchmark\\\\frontend\\\\src\\\\components\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Box, ThemeProvider, createTheme, Link } from '@mui/material';\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#7f60d4'\n    },\n    secondary: {\n      main: '#5e45a0'\n    },\n    background: {\n      default: '#f5f3ff',\n      paper: '#ffffff'\n    }\n  }\n});\nconst API_BASE_URL = 'https://yourbenchmark.onrender.com';\nconst RegisterPage = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${API_BASE_URL}/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Registration failed');\n      }\n      navigate('/login'); // Redirect to login page after successful registration\n    } catch (err) {\n      setErrorMessage(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '100vh',\n        backgroundColor: theme.palette.background.default,\n        padding: {\n          xs: 2,\n          sm: 3,\n          md: 4\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '100%',\n          maxWidth: {\n            xs: '100%',\n            sm: '400px'\n          },\n          p: {\n            xs: 2,\n            sm: 3,\n            md: 4\n          },\n          boxShadow: 3,\n          backgroundColor: theme.palette.background.paper,\n          borderRadius: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            color: theme.palette.primary.main,\n            fontSize: {\n              xs: '1.8rem',\n              sm: '2.2rem',\n              md: '2.5rem'\n            },\n            textAlign: 'center',\n            mb: 3\n          },\n          variant: \"h3\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            fullWidth: true,\n            margin: \"normal\",\n            autoComplete: \"new-name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            fullWidth: true,\n            margin: \"normal\",\n            autoComplete: \"new-email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            fullWidth: true,\n            margin: \"normal\",\n            autoComplete: \"new-password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            sx: {\n              mt: 2,\n              py: 1.5,\n              fontSize: '1rem'\n            },\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          sx: {\n            mt: 2,\n            textAlign: 'center'\n          },\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Already a user?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n              component: RouterLink,\n              to: \"/login\",\n              color: \"primary\",\n              children: \"Login here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterPage, \"ZmNX5thjon7Yg8rDkxHxp7K05C0=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Box","ThemeProvider","createTheme","Link","useNavigate","RouterLink","jsxDEV","_jsxDEV","theme","palette","primary","main","secondary","background","default","paper","API_BASE_URL","RegisterPage","_s","name","setName","email","setEmail","password","setPassword","errorMessage","setErrorMessage","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","err","children","sx","display","justifyContent","alignItems","minHeight","backgroundColor","padding","xs","sm","md","width","maxWidth","p","boxShadow","borderRadius","color","fontSize","textAlign","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","value","onChange","target","fullWidth","margin","autoComplete","type","mt","py","component","to","_c","$RefreshReg$"],"sources":["C:/Users/rishu/your-benchmark/frontend/src/components/RegisterPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Box, ThemeProvider, createTheme, Link } from '@mui/material';\r\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#7f60d4',\r\n        },\r\n        secondary: {\r\n            main: '#5e45a0',\r\n        },\r\n        background: {\r\n            default: '#f5f3ff',\r\n            paper: '#ffffff',\r\n        },\r\n    },\r\n});\r\n\r\nconst API_BASE_URL = 'https://yourbenchmark.onrender.com';\r\n\r\nconst RegisterPage = () => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n    }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/users/register`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    name,\r\n                    email,\r\n                    password,\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || 'Registration failed');\r\n            }\r\n\r\n            navigate('/login'); // Redirect to login page after successful registration\r\n\r\n        } catch (err) {\r\n            setErrorMessage(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    minHeight: '100vh',\r\n                    backgroundColor: theme.palette.background.default,\r\n                    padding: { xs: 2, sm: 3, md: 4 }\r\n                }}\r\n            >\r\n                <Box\r\n                    sx={{\r\n                        width: '100%',\r\n                        maxWidth: { xs: '100%', sm: '400px' },\r\n                        p: { xs: 2, sm: 3, md: 4 },\r\n                        boxShadow: 3,\r\n                        backgroundColor: theme.palette.background.paper,\r\n                        borderRadius: 2,\r\n                    }}\r\n                >\r\n                    <Typography\r\n                        sx={{\r\n                            color: theme.palette.primary.main,\r\n                            fontSize: { xs: '1.8rem', sm: '2.2rem', md: '2.5rem' },\r\n                            textAlign: 'center',\r\n                            mb: 3\r\n                        }}\r\n                        variant=\"h3\"\r\n                    >\r\n                        Register\r\n                    </Typography>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            label=\"Name\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            autoComplete=\"new-name\"\r\n                        />\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            type=\"email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            autoComplete=\"new-email\"\r\n                        />\r\n                        <TextField\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            autoComplete=\"new-password\"\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            fullWidth\r\n                            sx={{ mt: 2, py: 1.5, fontSize: '1rem' }}\r\n                        >\r\n                            Register\r\n                        </Button>\r\n                    </form>\r\n                    {errorMessage && (\r\n                        <Typography color=\"error\" sx={{ mt: 2, textAlign: 'center' }}>\r\n                            {errorMessage}\r\n                        </Typography>\r\n                    )}\r\n                    <Box sx={{ mt: 3, textAlign: 'center' }}>\r\n                        <Typography variant=\"body2\">\r\n                            Already a user?{' '}\r\n                            <Link component={RouterLink} to=\"/login\" color=\"primary\">\r\n                                Login here\r\n                            </Link>\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}