{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rishu\\\\your-benchmark\\\\frontend\\\\src\\\\components\\\\NumberMemory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Typography, TextField, LinearProgress, Container, Grid, useMediaQuery, Link } from '@mui/material';\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\nimport statsimg from \"../assets/voilet.png\";\nimport { theme, infoSectionStyles, infoBoxStyles, gameButtonStyles } from './Theme';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InfoSection = styled('div')(infoSectionStyles);\n_c = InfoSection;\nconst InfoBox = styled('div')(infoBoxStyles);\n_c2 = InfoBox;\nconst GameButton = styled(Button)(gameButtonStyles);\n_c3 = GameButton;\nconst NumberDisplay = styled(Typography)(({\n  theme\n}) => ({\n  fontWeight: 'bold',\n  color: theme.palette.primary.main,\n  marginBottom: theme.spacing(3),\n  userSelect: 'none'\n}));\n_c4 = NumberDisplay;\nconst LevelDisplay = styled(Typography)(({\n  theme\n}) => ({\n  fontWeight: 'bold',\n  color: theme.palette.secondary.main,\n  marginTop: theme.spacing(2)\n}));\n_c5 = LevelDisplay;\nconst NumberMemory = () => {\n  _s();\n  const [level, setLevel] = useState(1);\n  const [number, setNumber] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [showNumber, setShowNumber] = useState(false);\n  const [testOver, setTestOver] = useState(false);\n  const [testStarted, setTestStarted] = useState(false);\n  const [progress, setProgress] = useState(100);\n  const [userId, setUserId] = useState('');\n  const [testResults, setTestResults] = useState([]);\n  const generateNumber = len => {\n    let generated = '';\n    for (let i = 0; i < len; i++) {\n      generated += Math.floor(Math.random() * 10);\n    }\n    return generated;\n  };\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const storedUser = localStorage.getItem('user');\n        if (!storedUser) {\n          return;\n        }\n        const parsedUser = JSON.parse(storedUser);\n        const userId = parsedUser._id;\n        if (!userId) {\n          return;\n        }\n        setUserId(userId);\n        const response = await axios.get(`https://yourbenchmark.onrender.com/users/${userId}`);\n        setTestResults(response.data.testResults);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n    fetchUserData();\n  }, []);\n  const saveTestResults = async () => {\n    try {\n      const currentTestResults = testResults || {};\n      const numberMemoryData = currentTestResults.numberMemory || {\n        noOfTests: 0,\n        total: 0,\n        min: Infinity,\n        max: 0,\n        avg: 0\n      };\n      const newNoOfTests = numberMemoryData.noOfTests + 1;\n      const newTotal = numberMemoryData.total + (level - 1);\n      const newMin = Math.min(numberMemoryData.min, level - 1);\n      const newMax = Math.max(numberMemoryData.max, level - 1);\n      const newAvg = newTotal / newNoOfTests;\n      currentTestResults.numberMemory = {\n        noOfTests: newNoOfTests,\n        total: newTotal,\n        min: newMin,\n        max: newMax,\n        avg: newAvg\n      };\n      await axios.patch(`https://yourbenchmark.onrender.com/users/${userId}`, {\n        testResults: currentTestResults\n      });\n      console.log('Test results saved successfully');\n    } catch (error) {\n      console.error('Error saving test results:', error);\n    }\n  };\n  const startTest = currentLevel => {\n    setTestStarted(true);\n    const newNumber = generateNumber(currentLevel);\n    setNumber(newNumber);\n    setShowNumber(true);\n    const duration = 2000 + (currentLevel - 1) * 700;\n    setProgress(100);\n    setTimeout(() => {\n      setShowNumber(false);\n    }, duration);\n\n    // Progress bar logic\n    let progressInterval = setInterval(() => {\n      setProgress(prev => {\n        if (prev <= 0) {\n          clearInterval(progressInterval);\n          return 0;\n        }\n        return prev - 100 / (duration / 100);\n      });\n    }, 100);\n  };\n  const handleSubmit = () => {\n    if (userInput === number) {\n      const nextLevel = level + 1;\n      setLevel(nextLevel);\n      setUserInput('');\n      startTest(nextLevel);\n    } else {\n      saveTestResults();\n      setTestOver(true);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      if (!showNumber && testStarted && !testOver) {\n        handleSubmit();\n      }\n    }\n  };\n  const restartTest = () => {\n    setLevel(1);\n    setTestOver(false);\n    setUserInput('');\n    startTest(1);\n  };\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [showNumber, testStarted, testOver, userInput, number]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: 'background.default',\n        minHeight: '100vh',\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            textAlign: 'center',\n            py: 4\n          },\n          children: [!testOver ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              gutterBottom: true,\n              fontWeight: \"bold\",\n              color: \"primary\",\n              children: \"Number Memory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LevelDisplay, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: [\"Level \", level]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), showNumber ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(NumberDisplay, {\n                variant: \"h3\",\n                gutterBottom: true,\n                children: number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                variant: \"determinate\",\n                value: progress,\n                sx: {\n                  width: '80%',\n                  margin: '20px auto',\n                  height: 10\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: testStarted && /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"column\",\n                spacing: 2,\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h5\",\n                    gutterBottom: true,\n                    children: \"What was the number?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    value: userInput,\n                    onChange: e => setUserInput(e.target.value),\n                    variant: \"outlined\",\n                    placeholder: \"Enter the number\",\n                    inputProps: {\n                      style: {\n                        textAlign: 'center',\n                        fontSize: '24px'\n                      },\n                      autoFocus: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(GameButton, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleSubmit,\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 23\n              }, this)\n            }, void 0, false)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              gutterBottom: true,\n              fontWeight: \"bold\",\n              color: \"primary\",\n              children: \"Test Over!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: [\"You reached Level \", level - 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GameButton, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: restartTest,\n              sx: {\n                mt: 2\n              },\n              children: \"Restart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), !testStarted && /*#__PURE__*/_jsxDEV(GameButton, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => startTest(level),\n            size: \"large\",\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoSection, {\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"About the test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            paragraph: true,\n            children: \"The average person can only remember 7 digit numbers reliably, but it's possible to do much better using mnemonic techniques.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: statsimg,\n            alt: \"Statistics\",\n            style: {\n              width: '100%',\n              maxWidth: '400px',\n              margin: '0 auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(NumberMemory, \"8/GRaeMe73seRAxos5265QJJ1K8=\");\n_c6 = NumberMemory;\nexport default NumberMemory;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"InfoSection\");\n$RefreshReg$(_c2, \"InfoBox\");\n$RefreshReg$(_c3, \"GameButton\");\n$RefreshReg$(_c4, \"NumberDisplay\");\n$RefreshReg$(_c5, \"LevelDisplay\");\n$RefreshReg$(_c6, \"NumberMemory\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Typography","TextField","LinearProgress","Container","Grid","useMediaQuery","Link","styled","createTheme","ThemeProvider","statsimg","theme","infoSectionStyles","infoBoxStyles","gameButtonStyles","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","InfoSection","_c","InfoBox","_c2","GameButton","_c3","NumberDisplay","fontWeight","color","palette","primary","main","marginBottom","spacing","userSelect","_c4","LevelDisplay","secondary","marginTop","_c5","NumberMemory","_s","level","setLevel","number","setNumber","userInput","setUserInput","showNumber","setShowNumber","testOver","setTestOver","testStarted","setTestStarted","progress","setProgress","userId","setUserId","testResults","setTestResults","generateNumber","len","generated","i","Math","floor","random","fetchUserData","storedUser","localStorage","getItem","parsedUser","JSON","parse","_id","response","get","data","error","console","saveTestResults","currentTestResults","numberMemoryData","numberMemory","noOfTests","total","min","Infinity","max","avg","newNoOfTests","newTotal","newMin","newMax","newAvg","patch","log","startTest","currentLevel","newNumber","duration","setTimeout","progressInterval","setInterval","prev","clearInterval","handleSubmit","nextLevel","handleKeyPress","e","key","restartTest","window","addEventListener","removeEventListener","children","sx","bgcolor","minHeight","py","maxWidth","textAlign","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","value","width","margin","height","container","direction","alignItems","item","onChange","target","placeholder","inputProps","style","fontSize","autoFocus","onClick","mt","size","paragraph","src","alt","_c6","$RefreshReg$"],"sources":["C:/Users/rishu/your-benchmark/frontend/src/components/NumberMemory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, Typography, TextField, LinearProgress, Container, Grid, useMediaQuery, Link } from '@mui/material';\r\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport statsimg from \"../assets/voilet.png\";\r\nimport { theme, infoSectionStyles, infoBoxStyles, gameButtonStyles } from './Theme';\r\nimport axios from 'axios';\r\n\r\nconst InfoSection = styled('div')(infoSectionStyles);\r\nconst InfoBox = styled('div')(infoBoxStyles);\r\nconst GameButton = styled(Button)(gameButtonStyles);\r\n\r\nconst NumberDisplay = styled(Typography)(({ theme }) => ({\r\n  fontWeight: 'bold',\r\n  color: theme.palette.primary.main,\r\n  marginBottom: theme.spacing(3),\r\n  userSelect: 'none',\r\n}));\r\n\r\nconst LevelDisplay = styled(Typography)(({ theme }) => ({\r\n  fontWeight: 'bold',\r\n  color: theme.palette.secondary.main,\r\n  marginTop: theme.spacing(2),\r\n}));\r\n\r\nconst NumberMemory = () => {\r\n  const [level, setLevel] = useState(1);\r\n  const [number, setNumber] = useState('');\r\n  const [userInput, setUserInput] = useState('');\r\n  const [showNumber, setShowNumber] = useState(false);\r\n  const [testOver, setTestOver] = useState(false);\r\n  const [testStarted, setTestStarted] = useState(false);\r\n  const [progress, setProgress] = useState(100);\r\n  const [userId, setUserId] = useState('');\r\n  const [testResults, setTestResults] = useState([]);\r\n\r\n  const generateNumber = (len) => {\r\n    let generated = '';\r\n    for (let i = 0; i < len; i++) {\r\n      generated += Math.floor(Math.random() * 10);\r\n    }\r\n    return generated;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const storedUser = localStorage.getItem('user');\r\n        if (!storedUser) { return; }\r\n        const parsedUser = JSON.parse(storedUser);\r\n        const userId = parsedUser._id;\r\n        if (!userId) { return; }\r\n        setUserId(userId);\r\n\r\n        const response = await axios.get(`https://yourbenchmark.onrender.com/users/${userId}`);\r\n        setTestResults(response.data.testResults);\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    };\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const saveTestResults = async () => {\r\n    try {\r\n      const currentTestResults = testResults || {};\r\n      const numberMemoryData = currentTestResults.numberMemory || { noOfTests: 0, total: 0, min: Infinity, max: 0, avg: 0 };\r\n\r\n      const newNoOfTests = numberMemoryData.noOfTests + 1;\r\n      const newTotal = numberMemoryData.total + (level - 1);\r\n      const newMin = Math.min(numberMemoryData.min, (level - 1));\r\n      const newMax = Math.max(numberMemoryData.max, (level - 1));\r\n      const newAvg = newTotal / newNoOfTests;\r\n      \r\n      currentTestResults.numberMemory = {\r\n        noOfTests: newNoOfTests,\r\n        total: newTotal,\r\n        min: newMin,\r\n        max: newMax,\r\n        avg: newAvg,\r\n      };\r\n\r\n      await axios.patch(`https://yourbenchmark.onrender.com/users/${userId}`, {\r\n        testResults: currentTestResults,\r\n      });\r\n\r\n      console.log('Test results saved successfully');\r\n    } catch (error) {\r\n      console.error('Error saving test results:', error);\r\n    }\r\n  };\r\n\r\n  const startTest = (currentLevel) => {\r\n    setTestStarted(true);\r\n    const newNumber = generateNumber(currentLevel);\r\n    setNumber(newNumber);\r\n    setShowNumber(true);\r\n    \r\n    const duration = 2000 + (currentLevel - 1) * 700;\r\n    setProgress(100);\r\n    \r\n    setTimeout(() => {\r\n      setShowNumber(false);\r\n    }, duration);\r\n\r\n    // Progress bar logic\r\n    let progressInterval = setInterval(() => {\r\n        setProgress(prev => {\r\n            if (prev <= 0) {\r\n                clearInterval(progressInterval);\r\n                return 0;\r\n            }\r\n            return prev - (100 / (duration / 100));\r\n        });\r\n    }, 100);\r\n  };\r\n  \r\n  const handleSubmit = () => {\r\n    if (userInput === number) {\r\n      const nextLevel = level + 1;\r\n      setLevel(nextLevel);\r\n      setUserInput('');\r\n      startTest(nextLevel);\r\n    } else {\r\n      saveTestResults();\r\n      setTestOver(true);\r\n    }\r\n  };\r\n  \r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      if (!showNumber && testStarted && !testOver) {\r\n        handleSubmit();\r\n      }\r\n    }\r\n  };\r\n\r\n  const restartTest = () => {\r\n    setLevel(1);\r\n    setTestOver(false);\r\n    setUserInput('');\r\n    startTest(1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyPress);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyPress);\r\n    };\r\n  }, [showNumber, testStarted, testOver, userInput, number]);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Box sx={{ bgcolor: 'background.default', minHeight: '100vh', py: 4 }}>\r\n        <Container maxWidth=\"sm\">\r\n          <Box sx={{ textAlign: 'center', py: 4 }}>\r\n            {!testOver ? (\r\n              <>\r\n                <Typography variant=\"h3\" gutterBottom fontWeight=\"bold\" color=\"primary\">\r\n                  Number Memory\r\n                </Typography>\r\n                <LevelDisplay variant=\"h6\" gutterBottom>\r\n                  Level {level}\r\n                </LevelDisplay>\r\n                {showNumber ? (\r\n                  <>\r\n                    <NumberDisplay variant=\"h3\" gutterBottom>\r\n                      {number}\r\n                    </NumberDisplay>\r\n                    <LinearProgress\r\n                      variant=\"determinate\"\r\n                      value={progress}\r\n                      sx={{ width: '80%', margin: '20px auto', height: 10 }}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {testStarted && (\r\n                      <Grid container direction=\"column\" spacing={2} alignItems=\"center\">\r\n                        <Grid item>\r\n                          <Typography variant=\"h5\" gutterBottom>\r\n                            What was the number?\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <TextField\r\n                            value={userInput}\r\n                            onChange={(e) => setUserInput(e.target.value)}\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Enter the number\"\r\n                            inputProps={{\r\n                              style: { textAlign: 'center', fontSize: '24px' },\r\n                              autoFocus: true\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <GameButton variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n                            Submit\r\n                          </GameButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Typography variant=\"h4\" gutterBottom fontWeight=\"bold\" color=\"primary\">\r\n                  Test Over!\r\n                </Typography>\r\n                <Typography variant=\"h5\">\r\n                  You reached Level {level - 1}\r\n                </Typography>\r\n                <GameButton variant=\"contained\" color=\"primary\" onClick={restartTest} sx={{ mt: 2 }}>\r\n                  Restart\r\n                </GameButton>\r\n              </>\r\n            )}\r\n            {!testStarted && (\r\n              <GameButton variant=\"contained\" color=\"primary\" onClick={() => startTest(level)} size=\"large\">\r\n                Start Game\r\n              </GameButton>\r\n            )}\r\n          </Box>\r\n        </Container>\r\n        <InfoSection>\r\n          <InfoBox>\r\n             <Typography variant=\"h6\" gutterBottom>About the test</Typography>\r\n             <Typography paragraph>\r\n               The average person can only remember 7 digit numbers reliably, but it's possible to do much better using mnemonic techniques.\r\n             </Typography>\r\n          </InfoBox>\r\n           <InfoBox>\r\n            <Typography variant=\"h6\" gutterBottom>Statistics</Typography>\r\n            <img src={statsimg} alt=\"Statistics\" style={{ width: '100%', maxWidth: '400px', margin: '0 auto' }} />\r\n          </InfoBox>\r\n        </InfoSection>\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default NumberMemory;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,MAAM,EAAEC,UAAU,EAAEC,SAAS,EAAEC,cAAc,EAAEC,SAAS,EAAEC,IAAI,EAAEC,aAAa,EAAEC,IAAI,QAAQ,eAAe;AACxH,SAASC,MAAM,EAAEC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACzE,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,KAAK,EAAEC,iBAAiB,EAAEC,aAAa,EAAEC,gBAAgB,QAAQ,SAAS;AACnF,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,WAAW,GAAGb,MAAM,CAAC,KAAK,CAAC,CAACK,iBAAiB,CAAC;AAACS,EAAA,GAA/CD,WAAW;AACjB,MAAME,OAAO,GAAGf,MAAM,CAAC,KAAK,CAAC,CAACM,aAAa,CAAC;AAACU,GAAA,GAAvCD,OAAO;AACb,MAAME,UAAU,GAAGjB,MAAM,CAACR,MAAM,CAAC,CAACe,gBAAgB,CAAC;AAACW,GAAA,GAA9CD,UAAU;AAEhB,MAAME,aAAa,GAAGnB,MAAM,CAACP,UAAU,CAAC,CAAC,CAAC;EAAEW;AAAM,CAAC,MAAM;EACvDgB,UAAU,EAAE,MAAM;EAClBC,KAAK,EAAEjB,KAAK,CAACkB,OAAO,CAACC,OAAO,CAACC,IAAI;EACjCC,YAAY,EAAErB,KAAK,CAACsB,OAAO,CAAC,CAAC,CAAC;EAC9BC,UAAU,EAAE;AACd,CAAC,CAAC,CAAC;AAACC,GAAA,GALET,aAAa;AAOnB,MAAMU,YAAY,GAAG7B,MAAM,CAACP,UAAU,CAAC,CAAC,CAAC;EAAEW;AAAM,CAAC,MAAM;EACtDgB,UAAU,EAAE,MAAM;EAClBC,KAAK,EAAEjB,KAAK,CAACkB,OAAO,CAACQ,SAAS,CAACN,IAAI;EACnCO,SAAS,EAAE3B,KAAK,CAACsB,OAAO,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC;AAACM,GAAA,GAJEH,YAAY;AAMlB,MAAMI,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG/C,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACgD,MAAM,EAAEC,SAAS,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACkD,SAAS,EAAEC,YAAY,CAAC,GAAGnD,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoD,UAAU,EAAEC,aAAa,CAAC,GAAGrD,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACsD,QAAQ,EAAEC,WAAW,CAAC,GAAGvD,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACwD,WAAW,EAAEC,cAAc,CAAC,GAAGzD,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC0D,QAAQ,EAAEC,WAAW,CAAC,GAAG3D,QAAQ,CAAC,GAAG,CAAC;EAC7C,MAAM,CAAC4D,MAAM,EAAEC,SAAS,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC8D,WAAW,EAAEC,cAAc,CAAC,GAAG/D,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMgE,cAAc,GAAIC,GAAG,IAAK;IAC9B,IAAIC,SAAS,GAAG,EAAE;IAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,EAAEE,CAAC,EAAE,EAAE;MAC5BD,SAAS,IAAIE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IAC7C;IACA,OAAOJ,SAAS;EAClB,CAAC;EAEDjE,SAAS,CAAC,MAAM;IACd,MAAMsE,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;QAC/C,IAAI,CAACF,UAAU,EAAE;UAAE;QAAQ;QAC3B,MAAMG,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;QACzC,MAAMZ,MAAM,GAAGe,UAAU,CAACG,GAAG;QAC7B,IAAI,CAAClB,MAAM,EAAE;UAAE;QAAQ;QACvBC,SAAS,CAACD,MAAM,CAAC;QAEjB,MAAMmB,QAAQ,GAAG,MAAM5D,KAAK,CAAC6D,GAAG,CAAC,4CAA4CpB,MAAM,EAAE,CAAC;QACtFG,cAAc,CAACgB,QAAQ,CAACE,IAAI,CAACnB,WAAW,CAAC;MAC3C,CAAC,CAAC,OAAOoB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACDX,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,kBAAkB,GAAGvB,WAAW,IAAI,CAAC,CAAC;MAC5C,MAAMwB,gBAAgB,GAAGD,kBAAkB,CAACE,YAAY,IAAI;QAAEC,SAAS,EAAE,CAAC;QAAEC,KAAK,EAAE,CAAC;QAAEC,GAAG,EAAEC,QAAQ;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAE,CAAC;MAErH,MAAMC,YAAY,GAAGR,gBAAgB,CAACE,SAAS,GAAG,CAAC;MACnD,MAAMO,QAAQ,GAAGT,gBAAgB,CAACG,KAAK,IAAI3C,KAAK,GAAG,CAAC,CAAC;MACrD,MAAMkD,MAAM,GAAG5B,IAAI,CAACsB,GAAG,CAACJ,gBAAgB,CAACI,GAAG,EAAG5C,KAAK,GAAG,CAAE,CAAC;MAC1D,MAAMmD,MAAM,GAAG7B,IAAI,CAACwB,GAAG,CAACN,gBAAgB,CAACM,GAAG,EAAG9C,KAAK,GAAG,CAAE,CAAC;MAC1D,MAAMoD,MAAM,GAAGH,QAAQ,GAAGD,YAAY;MAEtCT,kBAAkB,CAACE,YAAY,GAAG;QAChCC,SAAS,EAAEM,YAAY;QACvBL,KAAK,EAAEM,QAAQ;QACfL,GAAG,EAAEM,MAAM;QACXJ,GAAG,EAAEK,MAAM;QACXJ,GAAG,EAAEK;MACP,CAAC;MAED,MAAM/E,KAAK,CAACgF,KAAK,CAAC,4CAA4CvC,MAAM,EAAE,EAAE;QACtEE,WAAW,EAAEuB;MACf,CAAC,CAAC;MAEFF,OAAO,CAACiB,GAAG,CAAC,iCAAiC,CAAC;IAChD,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAMmB,SAAS,GAAIC,YAAY,IAAK;IAClC7C,cAAc,CAAC,IAAI,CAAC;IACpB,MAAM8C,SAAS,GAAGvC,cAAc,CAACsC,YAAY,CAAC;IAC9CrD,SAAS,CAACsD,SAAS,CAAC;IACpBlD,aAAa,CAAC,IAAI,CAAC;IAEnB,MAAMmD,QAAQ,GAAG,IAAI,GAAG,CAACF,YAAY,GAAG,CAAC,IAAI,GAAG;IAChD3C,WAAW,CAAC,GAAG,CAAC;IAEhB8C,UAAU,CAAC,MAAM;MACfpD,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,EAAEmD,QAAQ,CAAC;;IAEZ;IACA,IAAIE,gBAAgB,GAAGC,WAAW,CAAC,MAAM;MACrChD,WAAW,CAACiD,IAAI,IAAI;QAChB,IAAIA,IAAI,IAAI,CAAC,EAAE;UACXC,aAAa,CAACH,gBAAgB,CAAC;UAC/B,OAAO,CAAC;QACZ;QACA,OAAOE,IAAI,GAAI,GAAG,IAAIJ,QAAQ,GAAG,GAAG,CAAE;MAC1C,CAAC,CAAC;IACN,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAED,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI5D,SAAS,KAAKF,MAAM,EAAE;MACxB,MAAM+D,SAAS,GAAGjE,KAAK,GAAG,CAAC;MAC3BC,QAAQ,CAACgE,SAAS,CAAC;MACnB5D,YAAY,CAAC,EAAE,CAAC;MAChBkD,SAAS,CAACU,SAAS,CAAC;IACtB,CAAC,MAAM;MACL3B,eAAe,CAAC,CAAC;MACjB7B,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC;EAED,MAAMyD,cAAc,GAAIC,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrB,IAAI,CAAC9D,UAAU,IAAII,WAAW,IAAI,CAACF,QAAQ,EAAE;QAC3CwD,YAAY,CAAC,CAAC;MAChB;IACF;EACF,CAAC;EAED,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxBpE,QAAQ,CAAC,CAAC,CAAC;IACXQ,WAAW,CAAC,KAAK,CAAC;IAClBJ,YAAY,CAAC,EAAE,CAAC;IAChBkD,SAAS,CAAC,CAAC,CAAC;EACd,CAAC;EAEDpG,SAAS,CAAC,MAAM;IACdmH,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEL,cAAc,CAAC;IAClD,OAAO,MAAM;MACXI,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEN,cAAc,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,CAAC5D,UAAU,EAAEI,WAAW,EAAEF,QAAQ,EAAEJ,SAAS,EAAEF,MAAM,CAAC,CAAC;EAE1D,oBACE3B,OAAA,CAACR,aAAa;IAACE,KAAK,EAAEA,KAAM;IAAAwG,QAAA,eAC1BlG,OAAA,CAACnB,GAAG;MAACsH,EAAE,EAAE;QAAEC,OAAO,EAAE,oBAAoB;QAAEC,SAAS,EAAE,OAAO;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAJ,QAAA,gBACpElG,OAAA,CAACd,SAAS;QAACqH,QAAQ,EAAC,IAAI;QAAAL,QAAA,eACtBlG,OAAA,CAACnB,GAAG;UAACsH,EAAE,EAAE;YAAEK,SAAS,EAAE,QAAQ;YAAEF,EAAE,EAAE;UAAE,CAAE;UAAAJ,QAAA,GACrC,CAACjE,QAAQ,gBACRjC,OAAA,CAAAE,SAAA;YAAAgG,QAAA,gBACElG,OAAA,CAACjB,UAAU;cAAC0H,OAAO,EAAC,IAAI;cAACC,YAAY;cAAChG,UAAU,EAAC,MAAM;cAACC,KAAK,EAAC,SAAS;cAAAuF,QAAA,EAAC;YAExE;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb9G,OAAA,CAACmB,YAAY;cAACsF,OAAO,EAAC,IAAI;cAACC,YAAY;cAAAR,QAAA,GAAC,QAChC,EAACzE,KAAK;YAAA;cAAAkF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,EACd/E,UAAU,gBACT/B,OAAA,CAAAE,SAAA;cAAAgG,QAAA,gBACElG,OAAA,CAACS,aAAa;gBAACgG,OAAO,EAAC,IAAI;gBAACC,YAAY;gBAAAR,QAAA,EACrCvE;cAAM;gBAAAgF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACM,CAAC,eAChB9G,OAAA,CAACf,cAAc;gBACbwH,OAAO,EAAC,aAAa;gBACrBM,KAAK,EAAE1E,QAAS;gBAChB8D,EAAE,EAAE;kBAAEa,KAAK,EAAE,KAAK;kBAAEC,MAAM,EAAE,WAAW;kBAAEC,MAAM,EAAE;gBAAG;cAAE;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvD,CAAC;YAAA,eACF,CAAC,gBAEH9G,OAAA,CAAAE,SAAA;cAAAgG,QAAA,EACG/D,WAAW,iBACVnC,OAAA,CAACb,IAAI;gBAACgI,SAAS;gBAACC,SAAS,EAAC,QAAQ;gBAACpG,OAAO,EAAE,CAAE;gBAACqG,UAAU,EAAC,QAAQ;gBAAAnB,QAAA,gBAChElG,OAAA,CAACb,IAAI;kBAACmI,IAAI;kBAAApB,QAAA,eACRlG,OAAA,CAACjB,UAAU;oBAAC0H,OAAO,EAAC,IAAI;oBAACC,YAAY;oBAAAR,QAAA,EAAC;kBAEtC;oBAAAS,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACT,CAAC,eACP9G,OAAA,CAACb,IAAI;kBAACmI,IAAI;kBAAApB,QAAA,eACRlG,OAAA,CAAChB,SAAS;oBACR+H,KAAK,EAAElF,SAAU;oBACjB0F,QAAQ,EAAG3B,CAAC,IAAK9D,YAAY,CAAC8D,CAAC,CAAC4B,MAAM,CAACT,KAAK,CAAE;oBAC9CN,OAAO,EAAC,UAAU;oBAClBgB,WAAW,EAAC,kBAAkB;oBAC9BC,UAAU,EAAE;sBACVC,KAAK,EAAE;wBAAEnB,SAAS,EAAE,QAAQ;wBAAEoB,QAAQ,EAAE;sBAAO,CAAC;sBAChDC,SAAS,EAAE;oBACb;kBAAE;oBAAAlB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC,eACP9G,OAAA,CAACb,IAAI;kBAACmI,IAAI;kBAAApB,QAAA,eACRlG,OAAA,CAACO,UAAU;oBAACkG,OAAO,EAAC,WAAW;oBAAC9F,KAAK,EAAC,SAAS;oBAACmH,OAAO,EAAErC,YAAa;oBAAAS,QAAA,EAAC;kBAEvE;oBAAAS,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YACP,gBACD,CACH;UAAA,eACD,CAAC,gBAEH9G,OAAA,CAAAE,SAAA;YAAAgG,QAAA,gBACElG,OAAA,CAACjB,UAAU;cAAC0H,OAAO,EAAC,IAAI;cAACC,YAAY;cAAChG,UAAU,EAAC,MAAM;cAACC,KAAK,EAAC,SAAS;cAAAuF,QAAA,EAAC;YAExE;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb9G,OAAA,CAACjB,UAAU;cAAC0H,OAAO,EAAC,IAAI;cAAAP,QAAA,GAAC,oBACL,EAACzE,KAAK,GAAG,CAAC;YAAA;cAAAkF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC,eACb9G,OAAA,CAACO,UAAU;cAACkG,OAAO,EAAC,WAAW;cAAC9F,KAAK,EAAC,SAAS;cAACmH,OAAO,EAAEhC,WAAY;cAACK,EAAE,EAAE;gBAAE4B,EAAE,EAAE;cAAE,CAAE;cAAA7B,QAAA,EAAC;YAErF;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;UAAA,eACb,CACH,EACA,CAAC3E,WAAW,iBACXnC,OAAA,CAACO,UAAU;YAACkG,OAAO,EAAC,WAAW;YAAC9F,KAAK,EAAC,SAAS;YAACmH,OAAO,EAAEA,CAAA,KAAM9C,SAAS,CAACvD,KAAK,CAAE;YAACuG,IAAI,EAAC,OAAO;YAAA9B,QAAA,EAAC;UAE9F;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CACb;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACZ9G,OAAA,CAACG,WAAW;QAAA+F,QAAA,gBACVlG,OAAA,CAACK,OAAO;UAAA6F,QAAA,gBACLlG,OAAA,CAACjB,UAAU;YAAC0H,OAAO,EAAC,IAAI;YAACC,YAAY;YAAAR,QAAA,EAAC;UAAc;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACjE9G,OAAA,CAACjB,UAAU;YAACkJ,SAAS;YAAA/B,QAAA,EAAC;UAEtB;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eACT9G,OAAA,CAACK,OAAO;UAAA6F,QAAA,gBACPlG,OAAA,CAACjB,UAAU;YAAC0H,OAAO,EAAC,IAAI;YAACC,YAAY;YAAAR,QAAA,EAAC;UAAU;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC7D9G,OAAA;YAAKkI,GAAG,EAAEzI,QAAS;YAAC0I,GAAG,EAAC,YAAY;YAACR,KAAK,EAAE;cAAEX,KAAK,EAAE,MAAM;cAAET,QAAQ,EAAE,OAAO;cAAEU,MAAM,EAAE;YAAS;UAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/F,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEpB,CAAC;AAACtF,EAAA,CAxNID,YAAY;AAAA6G,GAAA,GAAZ7G,YAAY;AA0NlB,eAAeA,YAAY;AAAC,IAAAnB,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAU,GAAA,EAAAI,GAAA,EAAA8G,GAAA;AAAAC,YAAA,CAAAjI,EAAA;AAAAiI,YAAA,CAAA/H,GAAA;AAAA+H,YAAA,CAAA7H,GAAA;AAAA6H,YAAA,CAAAnH,GAAA;AAAAmH,YAAA,CAAA/G,GAAA;AAAA+G,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}