{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rishu\\\\your-benchmark\\\\frontend\\\\src\\\\components\\\\ReactionTime.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Box, useMediaQuery, useTheme } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled('div')({\n  textAlign: 'center',\n  marginTop: '0px',\n  padding: '0px',\n  width: '100%',\n  minHeight: '100%',\n  backgroundColor: '#f5f3ff',\n  overflow: 'auto'\n});\n_c = Container;\nconst Header = styled('div')(({\n  theme,\n  isMobile\n}) => ({\n  backgroundColor: '#f5f3ff',\n  color: '#7f60d4',\n  padding: isMobile ? '30px 10px' : '50px 20px',\n  textAlign: 'center'\n}));\n_c2 = Header;\nconst Title = styled('h1')(({\n  isMobile\n}) => ({\n  margin: 0,\n  fontSize: isMobile ? '2rem' : '2.5rem'\n}));\n_c3 = Title;\nconst Instructions = styled('p')(({\n  isMobile\n}) => ({\n  marginTop: '10px',\n  fontSize: isMobile ? '1rem' : '1.2rem'\n}));\n_c4 = Instructions;\nconst TestArea = styled('div')(({\n  theme,\n  waiting,\n  isMobile\n}) => ({\n  margin: isMobile ? '30px auto' : '50px auto',\n  width: isMobile ? '90%' : '600px',\n  height: isMobile ? '150px' : '300px',\n  backgroundColor: waiting ? \"#f34212\" : '#7f60d4',\n  cursor: waiting ? 'default' : 'pointer',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  fontSize: isMobile ? '1rem' : '1.5rem',\n  color: 'white',\n  borderRadius: '8px',\n  maxHeight: '300px',\n  maxWidth: '600px',\n  minHeight: '250px'\n}));\n_c5 = TestArea;\nconst InfoSection = styled('div')(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  marginTop: '20px',\n  color: '#7f60d4',\n  maxHeight: '300px',\n  minHeight: '250px'\n}));\n_c6 = InfoSection;\nconst InfoBox = styled('div')(({\n  theme,\n  isMobile\n}) => ({\n  alignSelf: 'center',\n  width: isMobile ? '90%' : '300px',\n  maxWidth: '600px',\n  padding: '20px',\n  color: 'black',\n  backgroundColor: 'white',\n  borderRadius: '8px',\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n  margin: '20px',\n  textAlign: 'left',\n  transition: 'transform 0.3s ease, background-color 0.3s ease',\n  '&:hover': {\n    transform: 'scale(1.05)',\n    backgroundColor: '#e5d6f9'\n  }\n}));\n_c7 = InfoBox;\nconst ReactionTime = () => {\n  _s();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const [waiting, setWaiting] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [reactionTime, setReactionTime] = useState(null);\n  const [testCount, setTestCount] = useState(0);\n  const [reactionTimes, setReactionTimes] = useState([]);\n  const [userId, setUserId] = useState('');\n  const [testResults, setTestResults] = useState({});\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const storedUser = localStorage.getItem('user');\n        if (!storedUser) {\n          console.error('User data not found in localStorage');\n          return;\n        }\n        const parsedUser = JSON.parse(storedUser);\n        const userId = parsedUser._id;\n        setUserId(userId);\n        const response = await axios.get(`https://yourbenchmark.onrender.com/users/${userId}`);\n        setTestResults(response.data.testResults);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n    fetchUserData();\n  }, []);\n  const saveTestResults = async times => {\n    try {\n      const sum = times.reduce((acc, time) => acc + time, 0);\n      const average = sum / times.length;\n      const currentTestResults = testResults || {};\n      const reactionTimeData = currentTestResults.reactionTime || {\n        noOfTests: 0,\n        total: 0,\n        min: Infinity,\n        max: 0,\n        avg: 0\n      };\n      const newNoOfTests = reactionTimeData.noOfTests + 1;\n      const newTotal = reactionTimeData.total + average;\n      const newMin = Math.min(reactionTimeData.min, average);\n      const newMax = Math.max(reactionTimeData.max, average);\n      const newAvg = newTotal / newNoOfTests;\n      currentTestResults.reactionTime = {\n        noOfTests: newNoOfTests,\n        total: newTotal,\n        min: newMin,\n        max: newMax,\n        avg: newAvg\n      };\n      await axios.patch(`https://yourbenchmark.onrender.com/users/${userId}`, {\n        testResults: currentTestResults\n      });\n      console.log('Test results saved successfully');\n    } catch (error) {\n      console.error('Error saving test results:', error);\n    }\n  };\n  const startTest = () => {\n    if (testCount >= 5) return;\n    setReactionTime(null);\n    setWaiting(true);\n    const delay = Math.floor(Math.random() * 4000) + 2000;\n    setTimeout(() => {\n      setStartTime(Date.now());\n      setWaiting(false);\n    }, delay);\n  };\n  const handleClick = () => {\n    if (waiting) {\n      return;\n    }\n    if (testCount < 5) {\n      if (startTime) {\n        const endTime = Date.now();\n        const newReactionTime = endTime - startTime - 100;\n        const updatedReactionTimes = [...reactionTimes, newReactionTime];\n        setReactionTime(newReactionTime);\n        setReactionTimes(updatedReactionTimes);\n        setTestCount(prevCount => prevCount + 1);\n        setStartTime(null);\n        if (testCount + 1 === 5) {\n          saveTestResults(updatedReactionTimes);\n        }\n      } else if (!startTime) {\n        startTest();\n      }\n    } else {\n      setWaiting(false);\n      setStartTime(null);\n      setReactionTime(null);\n      setReactionTimes([]);\n      setTestCount(0);\n    }\n  };\n  const getAverageReactionTime = () => {\n    if (reactionTimes.length === 0) return 0;\n    const sum = reactionTimes.reduce((acc, time) => acc + time, 0);\n    return (sum / reactionTimes.length).toFixed(2);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isMobile: isMobile.toString(),\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        isMobile: isMobile.toString(),\n        children: \"Reaction Time Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Instructions, {\n        isMobile: isMobile.toString(),\n        children: \"When the box changes color , click as quickly as you can. Click anywhere to start.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TestArea, {\n      onClick: handleClick,\n      waiting: waiting,\n      isMobile: isMobile.toString(),\n      children: reactionTime === null && testCount < 5 ? waiting ? 'Click as soon as it turns voilet' : 'Click to start' : testCount < 5 ? `Your reaction time: ${reactionTime} ms` : 'Test Complete! Click to restart'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), testCount === 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: '#7f60d4'\n        },\n        children: [\"Average Reaction Time: \", getAverageReactionTime(), \" ms\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InfoSection, {\n      children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n        isMobile: isMobile.toString(),\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: '#7f60d4'\n          },\n          children: \"Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The average reaction time is around 273ms based on collected data.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n        isMobile: isMobile.toString(),\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: '#7f60d4'\n          },\n          children: \"About the test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This test measures your reaction time by having you click as soon as the red box turns green. Your reaction time may be affected by your computer's latency.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(ReactionTime, \"G1boE+0L5aEV1+l7UvSb0/feN30=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n_c8 = ReactionTime;\nexport default ReactionTime;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Instructions\");\n$RefreshReg$(_c5, \"TestArea\");\n$RefreshReg$(_c6, \"InfoSection\");\n$RefreshReg$(_c7, \"InfoBox\");\n$RefreshReg$(_c8, \"ReactionTime\");","map":{"version":3,"names":["React","useState","useEffect","styled","Box","useMediaQuery","useTheme","axios","jsxDEV","_jsxDEV","Container","textAlign","marginTop","padding","width","minHeight","backgroundColor","overflow","_c","Header","theme","isMobile","color","_c2","Title","margin","fontSize","_c3","Instructions","_c4","TestArea","waiting","height","cursor","display","justifyContent","alignItems","borderRadius","maxHeight","maxWidth","_c5","InfoSection","flexDirection","_c6","InfoBox","alignSelf","boxShadow","transition","transform","_c7","ReactionTime","_s","breakpoints","down","setWaiting","startTime","setStartTime","reactionTime","setReactionTime","testCount","setTestCount","reactionTimes","setReactionTimes","userId","setUserId","testResults","setTestResults","fetchUserData","storedUser","localStorage","getItem","console","error","parsedUser","JSON","parse","_id","response","get","data","saveTestResults","times","sum","reduce","acc","time","average","length","currentTestResults","reactionTimeData","noOfTests","total","min","Infinity","max","avg","newNoOfTests","newTotal","newMin","Math","newMax","newAvg","patch","log","startTest","delay","floor","random","setTimeout","Date","now","handleClick","endTime","newReactionTime","updatedReactionTimes","prevCount","getAverageReactionTime","toFixed","sx","children","toString","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","_c8","$RefreshReg$"],"sources":["C:/Users/rishu/your-benchmark/frontend/src/components/ReactionTime.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, useMediaQuery, useTheme } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst Container = styled('div')({\r\n  textAlign: 'center',\r\n  marginTop: '0px',\r\n  padding: '0px',\r\n  width: '100%',\r\n  minHeight: '100%',\r\n  backgroundColor: '#f5f3ff',\r\n  overflow: 'auto',\r\n});\r\n\r\nconst Header = styled('div')(({ theme, isMobile }) => ({\r\n  backgroundColor: '#f5f3ff',\r\n  color: '#7f60d4',\r\n  padding: isMobile ? '30px 10px' : '50px 20px',\r\n  textAlign: 'center',\r\n}));\r\n\r\nconst Title = styled('h1')(({ isMobile }) => ({\r\n  margin: 0,\r\n  fontSize: isMobile ? '2rem' : '2.5rem',\r\n}));\r\n\r\nconst Instructions = styled('p')(({ isMobile }) => ({\r\n  marginTop: '10px',\r\n  fontSize: isMobile ? '1rem' : '1.2rem',\r\n}));\r\n\r\nconst TestArea = styled('div')(({ theme, waiting, isMobile }) => ({\r\n  margin: isMobile ? '30px auto' : '50px auto',\r\n  width: isMobile ? '90%' : '600px',\r\n  height: isMobile ? '150px' : '300px',\r\n  backgroundColor: waiting ? \"#f34212\" : '#7f60d4',\r\n  cursor: waiting ? 'default' : 'pointer',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  fontSize: isMobile ? '1rem' : '1.5rem',\r\n  color: 'white',\r\n  borderRadius: '8px',\r\n  maxHeight: '300px',\r\n  maxWidth: '600px',\r\n  minHeight: '250px',\r\n}));\r\n\r\nconst InfoSection = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  marginTop: '20px',\r\n  color: '#7f60d4',\r\n  maxHeight: '300px',\r\n  minHeight: '250px',\r\n}));\r\n\r\nconst InfoBox = styled('div')(({ theme, isMobile }) => ({\r\n  alignSelf: 'center',\r\n  width: isMobile ? '90%' : '300px',\r\n  maxWidth: '600px',\r\n  padding: '20px',\r\n  color: 'black',\r\n  backgroundColor: 'white',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n  margin: '20px',\r\n  textAlign: 'left',\r\n  transition: 'transform 0.3s ease, background-color 0.3s ease',\r\n  '&:hover': {\r\n    transform: 'scale(1.05)',\r\n    backgroundColor: '#e5d6f9',\r\n  },\r\n}));\r\n\r\nconst ReactionTime = () => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const [waiting, setWaiting] = useState(false);\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [reactionTime, setReactionTime] = useState(null);\r\n  const [testCount, setTestCount] = useState(0);\r\n  const [reactionTimes, setReactionTimes] = useState([]);\r\n  const [userId, setUserId] = useState('');\r\n  const [testResults, setTestResults] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const storedUser = localStorage.getItem('user');\r\n        if (!storedUser) {\r\n          console.error('User data not found in localStorage');\r\n          return;\r\n        }\r\n        const parsedUser = JSON.parse(storedUser);\r\n        const userId = parsedUser._id;\r\n        setUserId(userId);\r\n\r\n        const response = await axios.get(`https://yourbenchmark.onrender.com/users/${userId}`);\r\n        setTestResults(response.data.testResults);\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    };\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const saveTestResults = async (times) => {\r\n    try {\r\n        const sum = times.reduce((acc, time) => acc + time, 0);\r\n        const average = sum / times.length;\r\n\r\n        const currentTestResults = testResults || {};\r\n        const reactionTimeData = currentTestResults.reactionTime || { noOfTests: 0, total: 0, min: Infinity, max: 0, avg: 0 };\r\n        \r\n        const newNoOfTests = reactionTimeData.noOfTests + 1;\r\n        const newTotal = reactionTimeData.total + average;\r\n        const newMin = Math.min(reactionTimeData.min, average);\r\n        const newMax = Math.max(reactionTimeData.max, average);\r\n        const newAvg = newTotal / newNoOfTests;\r\n\r\n        currentTestResults.reactionTime = {\r\n            noOfTests: newNoOfTests,\r\n            total: newTotal,\r\n            min: newMin,\r\n            max: newMax,\r\n            avg: newAvg,\r\n        };\r\n\r\n        await axios.patch(`https://yourbenchmark.onrender.com/users/${userId}`, {\r\n            testResults: currentTestResults,\r\n        });\r\n\r\n        console.log('Test results saved successfully');\r\n    } catch (error) {\r\n        console.error('Error saving test results:', error);\r\n    }\r\n  };\r\n\r\n  const startTest = () => {\r\n    if (testCount >= 5) return;\r\n    setReactionTime(null);\r\n    setWaiting(true);\r\n    const delay = Math.floor(Math.random() * 4000) + 2000;\r\n\r\n    setTimeout(() => {\r\n      setStartTime(Date.now());\r\n      setWaiting(false);\r\n    }, delay);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (waiting) {\r\n      return;\r\n    }\r\n\r\n    if (testCount < 5) {\r\n      if (startTime) {\r\n        const endTime = Date.now();\r\n        const newReactionTime = endTime - startTime - 100;\r\n        const updatedReactionTimes = [...reactionTimes, newReactionTime];\r\n        setReactionTime(newReactionTime);\r\n        setReactionTimes(updatedReactionTimes);\r\n        setTestCount((prevCount) => prevCount + 1);\r\n        setStartTime(null);\r\n\r\n        if (testCount + 1 === 5) {\r\n          saveTestResults(updatedReactionTimes);\r\n        }\r\n      } else if (!startTime) {\r\n        startTest();\r\n      }\r\n    } else {\r\n      setWaiting(false);\r\n      setStartTime(null);\r\n      setReactionTime(null);\r\n      setReactionTimes([]);\r\n      setTestCount(0);\r\n    }\r\n  };\r\n\r\n  const getAverageReactionTime = () => {\r\n    if (reactionTimes.length === 0) return 0;\r\n    const sum = reactionTimes.reduce((acc, time) => acc + time, 0);\r\n    return (sum / reactionTimes.length).toFixed(2);\r\n  };\r\n\r\n  return (\r\n    <Container sx={{height : '100vh'}}>\r\n      <Header isMobile={isMobile.toString()}>\r\n        <Title isMobile={isMobile.toString()}>Reaction Time Test</Title>\r\n        <Instructions isMobile={isMobile.toString()}>\r\n          When the box changes color , click as quickly as you can. Click anywhere to start.\r\n        </Instructions>\r\n      </Header>\r\n\r\n      <TestArea onClick={handleClick} waiting={waiting} isMobile={isMobile.toString()}>\r\n        {reactionTime === null && testCount < 5 ? (\r\n          waiting ? 'Click as soon as it turns voilet' : 'Click to start'\r\n        ) : testCount < 5 ? (\r\n          `Your reaction time: ${reactionTime} ms`\r\n        ) : (\r\n          'Test Complete! Click to restart'\r\n        )}\r\n      </TestArea>\r\n\r\n      {testCount === 5 && (\r\n        <div>\r\n          <h3 style={{ color: '#7f60d4' }}>Average Reaction Time: {getAverageReactionTime()} ms</h3>\r\n        </div>\r\n      )}\r\n\r\n      <InfoSection>\r\n        <InfoBox isMobile={isMobile.toString()}>\r\n          <h4 style={{ color: '#7f60d4' }}>Statistics</h4>\r\n          <p>The average reaction time is around 273ms based on collected data.</p>\r\n        </InfoBox>\r\n        <InfoBox isMobile={isMobile.toString()}>\r\n          <h4 style={{ color: '#7f60d4' }}>About the test</h4>\r\n          <p>\r\n            This test measures your reaction time by having you click as soon as the red box\r\n            turns green. Your reaction time may be affected by your computer's latency.\r\n          </p>\r\n        </InfoBox>\r\n      </InfoSection>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ReactionTime;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}